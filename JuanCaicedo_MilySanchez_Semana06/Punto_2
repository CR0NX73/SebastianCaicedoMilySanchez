{"metadata":{"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"}},"nbformat_minor":5,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport sympy as sym\n\nt = sym.Symbol('t',Real=True)\nh = sym.Symbol('h',Real=True)\n\n#Método Adams-Bashforth para 3 puntos\n\nF11=(t+h)*(t+2*h)/(2*h**2)\nF12=(-1)*(t+0)*(t+2*h)/(h**2)\nF13=(t+0)*(t+h)/(2*h**2)\n\nI11 = sym.integrate(F11, (t,0,h))\nI12 = sym.integrate(F12, (t,0,h))\nI13 = sym.integrate(F13, (t,0,h))\nprint(I11,I12,I13)\n\n#Método Adams-Bashforth para 4 puntos\n\nF21=(1)*(t+h)*(t+2*h)*(t+3*h)/(6*h**3)\nF22=(-1)*(t+0)*(t+2*h)*(t+3*h)/(2*h**3)\nF23=(1)*(t+0)*(t+h)*(t+3*h)/(2*h**3)\nF24=(-1)*(t+0)*(t+h)*(t+2*h)/(6*h**3)\n\nI21 = sym.integrate(F21, (t,0,h))\nI22 = sym.integrate(F22, (t,0,h))\nI23 = sym.integrate(F23, (t,0,h))\nI24 = sym.integrate(F24, (t,0,h))\nprint(I21,I22,I23,I24)\n\n#Método Adams-Moulton para 3 puntos\n\nF31=(1)*(t-0)*(t-(-h))/(2*h**2)\nF32=(-1)*(t-(h))*(t-(-h))/(h**2)\nF33=(1)*(t-(h))*(t-0)/(2*h**2)\n\nI31 = sym.integrate(F31, (t,0,h))\nI32 = sym.integrate(F32, (t,0,h))\nI33 = sym.integrate(F33, (t,0,h))\nprint(I31,I32,I33)\n\n#Método Adams-Moulton para 4 puntos\n\nF41=(1)*(t-0)*(t+h)*(t+2*h)/(6*h**3)\nF42=(-1)*(t-h)*(t+h)*(t+2*h)/(2*h**3)\nF43=(1)*(t-h)*(t+0)*(t+2*h)/(2*h**3)\nF44=(-1)*(t-h)*(t+0)*(t+h)/(6*h**3)\n\nI41 = sym.integrate(F41, (t,0,h))\nI42 = sym.integrate(F42, (t,0,h))\nI43 = sym.integrate(F43, (t,0,h))\nI44 = sym.integrate(F44, (t,0,h))\nprint(I41,I42,I43,I44)\n","metadata":{"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"23*h/12 -4*h/3 5*h/12\n55*h/24 -59*h/24 37*h/24 -3*h/8\n5*h/12 2*h/3 -h/12\n3*h/8 19*h/24 -5*h/24 h/24\n","output_type":"stream"}],"id":"27694a7f-c672-4ad4-8885-19ecc4e49135"},{"cell_type":"code","source":"!pip install numpy\n!pip install sympy","metadata":{"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"Requirement already satisfied: numpy in /srv/conda/envs/notebook/lib/python3.7/site-packages (1.21.5)\nRequirement already satisfied: sympy in /srv/conda/envs/notebook/lib/python3.7/site-packages (1.9)\nRequirement already satisfied: mpmath>=0.19 in /srv/conda/envs/notebook/lib/python3.7/site-packages (from sympy) (1.2.1)\n","output_type":"stream"}],"id":"e28344f1-9a30-4e63-aa02-1d960b06199c"},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[],"id":"bef65c13-8dc7-451d-a4b7-b6043145dcf0"}]}